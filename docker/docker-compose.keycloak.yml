version: '3.8'

services:
  # Banco de dados PostgreSQL para o Keycloak
  keycloak-db:
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak123
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      - keycloak-network
    restart: unless-stopped

  # Keycloak Server
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.3
    environment:
      # Database configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak123
      
      # Keycloak admin credentials
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      
      # Keycloak configuration
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_PROXY: edge
    
    command: start-dev
    ports:
      - "8080:8080"
    depends_on:
      - keycloak-db
    networks:
      - keycloak-network
    restart: unless-stopped
    volumes:
      - ./keycloak-setup:/opt/keycloak/data/import

  # ConvFlow API
  convflow-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - LOG_LEVEL=INFO
    volumes:
      - /tmp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - keycloak-network

  # Frontend (opcional)
  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_KEYCLOAK_URL=http://localhost:8080
      - VITE_KEYCLOAK_REALM=convflow
      - VITE_KEYCLOAK_CLIENT_ID=convflow-app
      - VITE_MARKDOWN_API_URL=http://localhost:8000
    depends_on:
      - keycloak
      - convflow-api
    networks:
      - keycloak-network
    profiles:
      - frontend

networks:
  keycloak-network:
    driver: bridge

volumes:
  keycloak_data:
